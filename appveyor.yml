image: Visual Studio 2019
platform: x64
configuration: Release
init:
  # To get RDP details for the current build worker
  - ps: iex ((new-object net.webclient).DownloadString('https://raw.githubusercontent.com/appveyor/ci/master/scripts/enable-rdp.ps1'))
on_finish:
  # If you need to investigate worker on build finish add $blockRdp = $true; to display Remote Desktop connection details and pause the build until a special “lock” file on VM desktop is deleted:
  #- ps: $blockRdp = $true; iex ((new-object net.webclient).DownloadString('https://raw.githubusercontent.com/appveyor/ci/master/scripts/enable-rdp.ps1'))
environment:
  APPVEYOR_SAVE_CACHE_ON_ERROR: true
  #Qt5_DIR: C:\Qt\5.13.2\mingw73_32
cache:
  - C:\Tools\vcpkg\installed\
install: # scripts that run after cloning repository
  # Update appveyor build version using git repository tags
  - cmd: |
      for /f %%a in ('"git describe --always --tags --broken --long"') do set gitVersion=%%a
      appveyor UpdateBuild -Version "%gitVersion%-build-%APPVEYOR_BUILD_NUMBER%"
  # Download plugin deps: Basler pylon, AVT vimba, etc
  - appveyor DownloadFile "%THIRDPARTY_LIBS_ZIP%" -FileName 3rdpartylibs.zip
  - dir
  - md 3rdpartylibs
  - cd 3rdpartylibs
  - pwd
  - dir
  - 7z x ..\3rdpartylibs.zip > nul
  - dir
  - set AVT_VIMBA_DIR=C:\projects\neuvision\3rdpartylibs\avtvimba
  - set PYLON_DEV_DIR=C:\projects\neuvision\3rdpartylibs\pylon
  - cd ..
  - pwd
  - dir
  # Download/install deps
  # we update vcpkg/installed folder manually since it takes too long
  # next runs should use appveyor cache and work ... we need to automate this!
  - vcpkg list
  # pause the build until a special “lock” file on VM desktop is deleted
  # useful to manually copy/download/update vcpkg libs like vtk & pcl that cannot be built in CI
  #- ps: $blockRdp = $true; iex ((new-object net.webclient).DownloadString('https://raw.githubusercontent.com/appveyor/ci/master/scripts/enable-rdp.ps1'))
  - vcpkg install opencv:x64-windows --recurse
  #- vcpkg install vtk:x64-windows # takes a really long time, build won't work on CI
  #- vcpkg install pcl:x64-windows # takes a really long time, build won't work on CI
  # Just to debug what vcpkg installed
  #- dir "C:/Tools/vcpkg/installed/x64-windows" & exit 0
  #- dir "C:/Tools/vcpkg/installed/x64-windows/include" & exit 0
  - dir "C:/Tools/vcpkg/installed/x64-windows/lib" & exit 0
  - dir "C:/Tools/vcpkg/installed/x64-windows/bin" & exit 0
build_script:
  - call "C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Auxiliary\Build\vcvarsall.bat" x86_amd64
  - call .\scripts\build_win.bat
after_build:
  - echo %Qt5_DIR%
  - ps: |
      Set-Content -Path "$env:Qt5_DIR\mkspecs\qconfig.pri" -Value 'QT_ARCH = i386
      QT_BUILDABI = i386-little_endian-ilp32
      QT.global.enabled_features = shared debug_and_release build_all c++11 c++14 c++1z c99 c11 thread future concurrent
      QT.global.disabled_features = cross_compile framework rpath appstore-compliant c++2a pkg-config force_asserts separate_debug_info simulator_and_device static
      QT_CONFIG += shared debug_and_release debug release build_all c++11 c++14 c++1z concurrent dbus no-pkg-config stl
      CONFIG += shared release no_plugin_manifest
      QT_VERSION = 5.13.2
      QT_MAJOR_VERSION = 5
      QT_MINOR_VERSION = 13
      QT_PATCH_VERSION = 2
      QT_GCC_MAJOR_VERSION = 7
      QT_GCC_MINOR_VERSION = 3
      QT_GCC_PATCH_VERSION = 0
      QT_EDITION = OpenSource
      QT_LICHECK =
      QT_RELEASE_DATE = 2019-10-28'

      Set-Content -Path "$env:Qt5_DIR\bin\qt.conf" -Value '[Paths]
      Documentation=../../Docs/Qt-5.13.2
      Examples=../../Examples/Qt-5.13.2
      Prefix=..'
      Set-Content -Path "$env:Qt5_DIR\bin\qtenv2.bat" -Value '@echo off
      echo Setting up environment for Qt usage...
      set PATH=C:\Qt\5.13.2\mingw73_32\bin;C:/Qt/Tools/mingw730_32\bin;%PATH%
      cd /D C:\Qt\5.13.2\mingw73_32'  
  - cd %APPVEYOR_BUILD_FOLDER%/build/Release/bin
  - call "%Qt5_DIR%\bin\windeployqt.exe" -concurrent -multimedia -multimediawidgets --qmldir ./../../../apps/Z3DScanner/qml/ --qmldir ./../../../apps/Z3DCloudViewer/qml/ ./Z3DScanner.exe ./Z3DCloudViewer.exe
  - cp "C:/Tools/vcpkg/installed/x64-windows/bin"/*.dll . # copy dependencies
  - del /s /q *.lib # remove unnecessary lib files
  - del /s /q *.exp # remove unnecessary exp files
  - del /s /q *.manifest # remove unnecessary manifest files
artifacts:
  # pushing entire folder as a zip archive
  - path: build/Release/bin
    name: NEUVision-Windows-x64-v$(appveyor_build_version)
  - path: build/install
    name: NEUVision-dev-Windows-x64-v$(appveyor_build_version)
deploy:
  release: NEUVision-Windows-x64-v$(appveyor_build_version)
  description: 'Automatic snapshot release from CI'
  provider: GitHub
  auth_token:
    secure: HB3l4Z3rheEHCGg+L8nuqS3uxbm+hX807Um8YG+IFj2uWDolRuiJVR1Kx99T8bwC
  artifact: /.*\.zip/            # upload all zip packages to release assets
  draft: true
  prerelease: true
  on:
#    branch: master               # release from master branch only
    appveyor_repo_tag: true      # deploy on tag push only
